---
  
- name: Give time for scan pods to complete before extracting results
  pause:
    minutes: 6
  when: scan | bool

- name: Retrieve master scan results from PVC
  shell: oc get pvc -n {{ namespace}} | grep master | awk '{print $1}'
  register: master_results

- name: Create master-pv-extract.yml
  file:
    path: '{{ work_dir }}/master-pv-extract.yml'
    state: touch

- name: Add content to master-pv-extract.yml
  blockinfile:
    path: '{{ work_dir }}/master-pv-extract.yml'
    block: |
      apiVersion: "v1"
      kind: Pod
      metadata:
        name: master-pv-extract
      spec:
        containers:
        - name: master-pv-extract
          image: registry.access.redhat.com/ubi8/ubi
          command: ["sleep", "3000"]
          volumeMounts:
            - mountPath: '{{ master_results_path }}'
              name: masters-scan-vol
        volumes:
        - name: masters-scan-vol
          persistentVolumeClaim:
            claimName: '{{ master_results.stdout }}'
            
- name: Check if master-pv-extract pod is already running
  shell: oc get pods -n {{ namespace }} | grep master-pv-extract
  register: master_pv_pod
  failed_when: master_pv_pod.rc == 2
  
- name: Delete master-pv-extract if already running
  shell: oc delete pod/master-pv-extract
  when: master_pv_pod.rc == 0
  
- name: Pause to allow existing master-pv-extract pod termination
  pause:
    minutes: 1
  when: master_pv_pod.rc == 0

- name: Start master-pv-extract pod
  shell: oc create -n {{ namespace }} -f '{{ work_dir }}/master-pv-extract.yml'
  
- name: Pause to allow master-pv-extract pod creation
  pause:
    minutes: 1

- name: Create directory to hold master scan results
  file:
    path: '{{ work_dir }}/{{ master_results_dir }}'
    state: directory

- name: Copy results directory from master-pv-extract pod
  shell: oc cp master-pv-extract:/masters-scan-results '{{ work_dir }}/{{ master_results_dir }}/'
  
- name: Create a backup directory to store previous results
  file:
    path: '{{ work_dir }}/backup'
    state: directory

- name: Move previous master results to backup directory
  copy:
    src: '{{ work_dir }}/{{ master_results_dir }}/'
    dest: '{{ work_dir }}/backup'

- name: Retrieve worker scan results from PVC
  shell: oc get pvc -n {{ namespace }} | grep worker | awk '{print $1}'
  register: worker_results

- name: Create worker-pv-extract.yml
  file:
    path: '{{ work_dir }}/worker-pv-extract.yml'
    state: touch

- name: Add content to worker-pv-extract.yml
  blockinfile:
    path: '{{ work_dir }}/worker-pv-extract.yml'
    block: |
      apiVersion: "v1"
      kind: Pod
      metadata:
        name: worker-pv-extract
      spec:
        containers:
        - name: worker-pv-extract
          image: registry.access.redhat.com/ubi8/ubi
          command: ["sleep", "3000"]
          volumeMounts:
            - mountPath: '{{ worker_results_path }}'
              name: workers-scan-vol
        volumes:
        - name: workers-scan-vol
          persistentVolumeClaim:
            claimName: '{{ worker_results.stdout }}'

- name: Check if worker-pv-extract pod is already running
  shell: oc get pods -n {{ namespace }} | grep worker-pv-extract
  register: worker_pv_pod
  failed_when: worker_pv_pod.rc == 2

- name: Delete worker-pv-extract pod if already running
  shell: oc delete pod/worker-pv-extract
  when: worker_pv_pod.rc == 0
  
- name: Pause to allow existing worker-pv-extract pod termination
  pause:
    minutes: 1
  when: worker_pv_pod.rc == 0
  
- name: Start worker-pv-extract pod
  shell: oc create -n {{ namespace }} -f '{{ work_dir }}/worker-pv-extract.yml'

- name: Pause to allow worker-pv-extract pod creation
  pause:
    minutes: 1

- name: Create directory to hold worker scan results
  file:
    path: '{{ work_dir }}/{{ worker_results_dir }}'
    state: directory

- name: Copy results directory from worker-pv-extract pod
  shell: oc cp worker-pv-extract:/workers-scan-results '{{ work_dir }}/{{ worker_results_dir }}/'

- name: Move previous worker results to backup directory
  copy:
    src: '{{ work_dir }}/{{ worker_results_dir }}/'
    dest: '{{ work_dir }}/backup'
    
  
  
